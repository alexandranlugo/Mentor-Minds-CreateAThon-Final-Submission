{"ast":null,"code":"var _jsxFileName = \"/Users/alugo/Downloads/flashcards.zip (Unzipped Files)/src/components/FlashcardArray/FlashcardArray.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Flashcard from \"../Flashcard/Flashcard.tsx\";\nimport \"./FlashcardArray.scss\";\n\n// added\n// cycle?: boolean;\n// currentCardFlipRef?: React.MutableRefObject<() => void>;\n// resetArray\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlashcardArray({\n  cards,\n  controls = true,\n  showCount = true,\n  onCardChange = () => {},\n  onCardFlip = () => {},\n  frontCardStyle = {},\n  frontContentStyle = {},\n  backCardStyle = {},\n  backContentStyle = {},\n  forwardRef = {\n    current: null\n  },\n  FlashcardArrayStyle = {},\n  currentCardFlipRef,\n  cycle = false\n}) {\n  _s();\n  const [cardNumber, setCardNumber] = useState(0);\n  const [cardsInDisplay, setCardsInDisplay] = useState(!cycle ? [-1, 0, 1] : [cards.length - 1, 0, 1]);\n  const [isOverFlow, setIsOverFlow] = useState(\"\");\n  const placeFillerCard = /*#__PURE__*/_jsxDEV(Flashcard, {\n    className: \"FlashcardArrayWrapper__empty\",\n    width: \"100%\",\n    backHTML: \"\",\n    frontHTML: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n  const cardsList = cards.map((card, index) => /*#__PURE__*/_jsxDEV(Flashcard, {\n    frontHTML: card.frontHTML,\n    backHTML: card.backHTML,\n    manualFlipRef: cardNumber === index ? currentCardFlipRef : {\n      current: null\n    },\n    frontCardStyle: {\n      ...card.frontCardStyle,\n      ...frontCardStyle\n    },\n    frontContentStyle: {\n      ...card.frontContentStyle,\n      ...frontContentStyle\n    },\n    backCardStyle: {\n      ...card.backCardStyle,\n      ...backCardStyle\n    },\n    backContentStyle: {\n      ...card.backContentStyle,\n      ...backContentStyle\n    },\n    className: card.className,\n    height: card.height || \"100%\",\n    width: card.width || \"100%\",\n    style: card.style,\n    onCardFlip: state => {\n      onCardFlip(card.id, index, state);\n      setIsOverFlow(\"hidden\");\n      setTimeout(() => {\n        setIsOverFlow(\"\");\n      }, 3);\n    }\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this));\n  const numberOfCards = cardsList.length !== undefined ? cardsList.length - 1 : 0;\n  const resetArray = () => {\n    setCardsInDisplay(!cycle ? [-1, 0, 1] : [cards.length - 1, 0, 1]);\n    setCardNumber(0);\n  };\n  const nextCard = useCallback(() => {\n    const currentCardNumber = cardNumber + 1 < numberOfCards ? cardNumber + 1 : numberOfCards;\n    if (currentCardNumber < numberOfCards) {\n      setIsOverFlow(\"hidden\");\n      setTimeout(() => {\n        setIsOverFlow(\"\");\n      }, 90);\n    }\n    if (cycle) {\n      setCardsInDisplay(prevState => {\n        setCardNumber(prevState[1] + 1 < cards.length ? prevState[1] + 1 : 0);\n        return [prevState[0] + 1 < cards.length ? prevState[0] + 1 : 0, prevState[1] + 1 < cards.length ? prevState[1] + 1 : 0, prevState[2] + 1 < cards.length ? prevState[2] + 1 : 0];\n      });\n    } else {\n      setCardNumber(currentCardNumber);\n      setCardsInDisplay(currentCardNumber < numberOfCards ? [currentCardNumber - 1, currentCardNumber, currentCardNumber + 1] : [numberOfCards - 1, numberOfCards, -1]);\n    }\n    onCardChange(cards[currentCardNumber].id, currentCardNumber + 1);\n  }, [cardNumber, cycle, numberOfCards]);\n  const prevCard = useCallback(() => {\n    const currentCardNumber = cardNumber - 1 >= 0 ? cardNumber - 1 : 0;\n    if (currentCardNumber !== 0) {\n      setIsOverFlow(\"hidden\");\n      setTimeout(() => {\n        setIsOverFlow(\"\");\n      }, 90);\n    }\n    if (cycle) {\n      setCardsInDisplay(prevState => {\n        const activeCard = prevState[1] - 1 < 0 ? cards.length - 1 : prevState[1] - 1;\n        setCardNumber(prevState[1] - 1 >= 0 ? prevState[1] - 1 : cards.length - 1);\n        return [activeCard - 1 < 0 ? cards.length - 1 : activeCard - 1, activeCard, activeCard + 1 < cards.length ? activeCard + 1 : 0];\n      });\n    } else {\n      setCardNumber(currentCardNumber);\n      setCardsInDisplay(currentCardNumber === 0 ? [-1, 0, 1] : [currentCardNumber - 1, currentCardNumber, currentCardNumber + 1]);\n    }\n    onCardChange(cards[currentCardNumber].id, currentCardNumber + 1);\n  }, [cardNumber, cycle, numberOfCards]);\n  useEffect(() => {\n    if (forwardRef.current) {\n      forwardRef.current.nextCard = nextCard;\n      forwardRef.current.prevCard = prevCard;\n      forwardRef.current.resetArray = resetArray;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FlashcardArrayWrapper\",\n    style: FlashcardArrayStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FlashcardArrayWrapper__CardHolder\",\n      style: {\n        overflow: isOverFlow\n      },\n      children: [cardsInDisplay[0] !== -1 ? cardsList[cardsInDisplay[0]] : placeFillerCard, cardsList[cardsInDisplay[1]], cardsInDisplay[2] !== -1 ? cardsList[cardsInDisplay[2]] : placeFillerCard]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), (controls || showCount) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FlashcardArrayWrapper__controls\",\n      children: [controls && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => prevCard(),\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          style: {\n            height: \"24px\",\n            width: \"24px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M19 12a1 1 0 0 1-1 1H8.414l1.293 1.293a1 1 0 1 1-1.414 1.414l-3-3a1 1 0 0 1 0-1.414l3-3a1 1 0 0 1 1.414 1.414L8.414 11H18a1 1 0 0 1 1 1z\",\n            style: {\n              fill: \"#1c1b1e\",\n              height: \"24px\",\n              width: \"24px\"\n            },\n            \"data-name\": \"Left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this), showCount && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"FlashcardArrayWrapper__controls--count\",\n        children: [cardNumber + 1, \"/\", cardsList.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this), controls && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextCard(),\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          style: {\n            height: \"24px\",\n            width: \"24px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"m18.707 12.707-3 3a1 1 0 0 1-1.414-1.414L15.586 13H6a1 1 0 0 1 0-2h9.586l-1.293-1.293a1 1 0 0 1 1.414-1.414l3 3a1 1 0 0 1 0 1.414z\",\n            style: {\n              fill: \"#1c1b1e\",\n              height: \"24px\",\n              width: \"24px\"\n            },\n            \"data-name\": \"Right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashcardArray, \"H2mPw47WrhWIukMkYuxEhtb59FQ=\");\n_c = FlashcardArray;\nexport default FlashcardArray;\nvar _c;\n$RefreshReg$(_c, \"FlashcardArray\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","Flashcard","jsxDEV","_jsxDEV","FlashcardArray","cards","controls","showCount","onCardChange","onCardFlip","frontCardStyle","frontContentStyle","backCardStyle","backContentStyle","forwardRef","current","FlashcardArrayStyle","currentCardFlipRef","cycle","_s","cardNumber","setCardNumber","cardsInDisplay","setCardsInDisplay","length","isOverFlow","setIsOverFlow","placeFillerCard","className","width","backHTML","frontHTML","fileName","_jsxFileName","lineNumber","columnNumber","cardsList","map","card","index","manualFlipRef","height","style","state","id","setTimeout","numberOfCards","undefined","resetArray","nextCard","currentCardNumber","prevState","prevCard","activeCard","children","overflow","onClick","xmlns","viewBox","d","fill","_c","$RefreshReg$"],"sources":["/Users/alugo/Downloads/flashcards.zip (Unzipped Files)/src/components/FlashcardArray/FlashcardArray.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport FlashcardArrayProps from \"../../interfaces/IFlashcardArray.ts\";\r\nimport Flashcard from \"../Flashcard/Flashcard.tsx\";\r\nimport \"./FlashcardArray.scss\";\r\n\r\n// added\r\n// cycle?: boolean;\r\n// currentCardFlipRef?: React.MutableRefObject<() => void>;\r\n// resetArray\r\n\r\nfunction FlashcardArray({\r\n  cards,\r\n  controls = true,\r\n  showCount = true,\r\n  onCardChange = () => {},\r\n  onCardFlip = () => {},\r\n  frontCardStyle = {},\r\n  frontContentStyle = {},\r\n  backCardStyle = {},\r\n  backContentStyle = {},\r\n  forwardRef = { current: null },\r\n  FlashcardArrayStyle = {},\r\n  currentCardFlipRef,\r\n  cycle = false,\r\n}: FlashcardArrayProps) {\r\n  const [cardNumber, setCardNumber] = useState(0);\r\n  const [cardsInDisplay, setCardsInDisplay] = useState(\r\n    !cycle ? [-1, 0, 1] : [cards.length - 1, 0, 1]\r\n  );\r\n  const [isOverFlow, setIsOverFlow] = useState(\"\");\r\n\r\n  const placeFillerCard = (\r\n    <Flashcard\r\n      className=\"FlashcardArrayWrapper__empty\"\r\n      width=\"100%\"\r\n      backHTML=\"\"\r\n      frontHTML=\"\"\r\n    />\r\n  );\r\n\r\n  const cardsList = cards.map((card, index) => (\r\n    <Flashcard\r\n      key={index}\r\n      frontHTML={card.frontHTML}\r\n      backHTML={card.backHTML}\r\n      manualFlipRef={\r\n        cardNumber === index ? currentCardFlipRef : { current: null }\r\n      }\r\n      frontCardStyle={{ ...card.frontCardStyle, ...frontCardStyle }}\r\n      frontContentStyle={{ ...card.frontContentStyle, ...frontContentStyle }}\r\n      backCardStyle={{ ...card.backCardStyle, ...backCardStyle }}\r\n      backContentStyle={{ ...card.backContentStyle, ...backContentStyle }}\r\n      className={card.className}\r\n      height={card.height || \"100%\"}\r\n      width={card.width || \"100%\"}\r\n      style={card.style}\r\n      onCardFlip={(state) => {\r\n        onCardFlip(card.id, index, state);\r\n        setIsOverFlow(\"hidden\");\r\n        setTimeout(() => {\r\n          setIsOverFlow(\"\");\r\n        }, 3);\r\n      }}\r\n    />\r\n  ));\r\n\r\n  const numberOfCards =\r\n    cardsList.length !== undefined ? cardsList.length - 1 : 0;\r\n\r\n  const resetArray = () => {\r\n    setCardsInDisplay(!cycle ? [-1, 0, 1] : [cards.length - 1, 0, 1]);\r\n    setCardNumber(0);\r\n  };\r\n\r\n  const nextCard = useCallback(() => {\r\n    const currentCardNumber =\r\n      cardNumber + 1 < numberOfCards ? cardNumber + 1 : numberOfCards;\r\n\r\n    if (currentCardNumber < numberOfCards) {\r\n      setIsOverFlow(\"hidden\");\r\n      setTimeout(() => {\r\n        setIsOverFlow(\"\");\r\n      }, 90);\r\n    }\r\n    if (cycle) {\r\n      setCardsInDisplay((prevState) => {\r\n        setCardNumber(prevState[1] + 1 < cards.length ? prevState[1] + 1 : 0);\r\n        return [\r\n          prevState[0] + 1 < cards.length ? prevState[0] + 1 : 0,\r\n          prevState[1] + 1 < cards.length ? prevState[1] + 1 : 0,\r\n          prevState[2] + 1 < cards.length ? prevState[2] + 1 : 0,\r\n        ];\r\n      });\r\n    } else {\r\n      setCardNumber(currentCardNumber);\r\n      setCardsInDisplay(\r\n        currentCardNumber < numberOfCards\r\n          ? [currentCardNumber - 1, currentCardNumber, currentCardNumber + 1]\r\n          : [numberOfCards - 1, numberOfCards, -1]\r\n      );\r\n    }\r\n\r\n    onCardChange(cards[currentCardNumber].id, currentCardNumber + 1);\r\n  }, [cardNumber, cycle, numberOfCards]);\r\n\r\n  const prevCard = useCallback(() => {\r\n    const currentCardNumber = cardNumber - 1 >= 0 ? cardNumber - 1 : 0;\r\n\r\n    if (currentCardNumber !== 0) {\r\n      setIsOverFlow(\"hidden\");\r\n      setTimeout(() => {\r\n        setIsOverFlow(\"\");\r\n      }, 90);\r\n    }\r\n\r\n    if (cycle) {\r\n      setCardsInDisplay((prevState) => {\r\n        const activeCard =\r\n          prevState[1] - 1 < 0 ? cards.length - 1 : prevState[1] - 1;\r\n\r\n        setCardNumber(\r\n          prevState[1] - 1 >= 0 ? prevState[1] - 1 : cards.length - 1\r\n        );\r\n\r\n        return [\r\n          activeCard - 1 < 0 ? cards.length - 1 : activeCard - 1,\r\n          activeCard,\r\n          activeCard + 1 < cards.length ? activeCard + 1 : 0,\r\n        ];\r\n      });\r\n    } else {\r\n      setCardNumber(currentCardNumber);\r\n      setCardsInDisplay(\r\n        currentCardNumber === 0\r\n          ? [-1, 0, 1]\r\n          : [currentCardNumber - 1, currentCardNumber, currentCardNumber + 1]\r\n      );\r\n    }\r\n    onCardChange(cards[currentCardNumber].id, currentCardNumber + 1);\r\n  }, [cardNumber, cycle, numberOfCards]);\r\n\r\n  useEffect(() => {\r\n    if (forwardRef.current) {\r\n      forwardRef.current.nextCard = nextCard;\r\n      forwardRef.current.prevCard = prevCard;\r\n      forwardRef.current.resetArray = resetArray;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"FlashcardArrayWrapper\" style={FlashcardArrayStyle}>\r\n      <div\r\n        className=\"FlashcardArrayWrapper__CardHolder\"\r\n        style={{ overflow: isOverFlow }}\r\n      >\r\n        {cardsInDisplay[0] !== -1\r\n          ? cardsList[cardsInDisplay[0]]\r\n          : placeFillerCard}\r\n        {cardsList[cardsInDisplay[1]]}\r\n        {cardsInDisplay[2] !== -1\r\n          ? cardsList[cardsInDisplay[2]]\r\n          : placeFillerCard}\r\n      </div>\r\n\r\n      {(controls || showCount) && (\r\n        <div className=\"FlashcardArrayWrapper__controls\">\r\n          {controls && (\r\n            <button onClick={() => prevCard()}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 24 24\"\r\n                style={{ height: \"24px\", width: \"24px\" }}\r\n              >\r\n                <path\r\n                  d=\"M19 12a1 1 0 0 1-1 1H8.414l1.293 1.293a1 1 0 1 1-1.414 1.414l-3-3a1 1 0 0 1 0-1.414l3-3a1 1 0 0 1 1.414 1.414L8.414 11H18a1 1 0 0 1 1 1z\"\r\n                  style={{ fill: \"#1c1b1e\", height: \"24px\", width: \"24px\" }}\r\n                  data-name=\"Left\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          )}\r\n          {showCount && (\r\n            <span className=\"FlashcardArrayWrapper__controls--count\">\r\n              {cardNumber + 1}/{cardsList.length}\r\n            </span>\r\n          )}\r\n          {controls && (\r\n            <button onClick={() => nextCard()}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 24 24\"\r\n                style={{ height: \"24px\", width: \"24px\" }}\r\n              >\r\n                <path\r\n                  d=\"m18.707 12.707-3 3a1 1 0 0 1-1.414-1.414L15.586 13H6a1 1 0 0 1 0-2h9.586l-1.293-1.293a1 1 0 0 1 1.414-1.414l3 3a1 1 0 0 1 0 1.414z\"\r\n                  style={{ fill: \"#1c1b1e\", height: \"24px\", width: \"24px\" }}\r\n                  data-name=\"Right\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FlashcardArray;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}